version: '3.7'
services:
  traefik:
    image: traefik:v2.1.9
    restart: always
    command:
#      - "--log.level=DEBUG"
      - "--api.insecure=false"
      - "--api.dashboard=false"
      - "--providers.docker=true"
      - "--providers.docker.exposedByDefault=false"
      - "--entryPoints.web.address=:80"
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
  ng:
    build:
      context: ./
      dockerfile: apps/pmp-web/Dockerfile
    restart: always
    labels:
      - "traefik.enable=true"
      # HTTP
      - "traefik.http.routers.ng.rule=Host(`${DOMAIN:-pmp.local}`)"
      - "traefik.http.routers.ng.entrypoints=web"
  api:
    build:
      context: ./
      dockerfile: apps/pmp-api/Dockerfile
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=pmp"
      # HTTP
      - "traefik.http.routers.api.rule=Host(`${DOMAIN:-pmp.local}`) && PathPrefix(`/api`)"
      - "traefik.http.routers.api.entrypoints=web"
    env_file:
      - .env
    networks:
      - default
      - backend
  db:
    image: postgres:12.2
    volumes:
      - db:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_DB:${DB_NAME}
    networks:
      - backend

networks:
  default:
    name: pmp
  backend:
    driver: 'bridge'

volumes:
  db:
